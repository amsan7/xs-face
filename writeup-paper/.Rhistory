filter(!is.na(dt)) %>%
mutate(isDuplicate = (dt==0)) %>%
group_by(subid) %>%
summarize(duplicateCount = sum(isDuplicate))
## check that we synced everything right
assert_that(sum(test$duplicateCount)==0)
assert_that(sum(is.na(d$time))==0)
# Complete the data frame so that zeros get counted: expands so that each subid
# includes a zero length row for each posture and orientation.
# this was annoying.
ages <- d %>%
group_by(subid) %>%
summarise(age.grp = mean(age.grp))
complete_combos <- tidyr::expand(d, nesting(posture, orientation), subid) %>%
mutate(dt = 0, faceMT = FALSE, faceVJ = FALSE, faceOP = FALSE, handOP = FALSE, wristOP = FALSE) %>%
left_join(ages)
d <- bind_rows(d, complete_combos) ## bind these 251  data points
## save it out
write_csv(d, "../data/consolidateddata/consolidated_data_4detectors_test.csv")
d
d_test <- read_csv("../data/consolidateddata/consolidated_data_4detectors_march7.csv")
d_test$time == d$pkt_time
length(d_test$time)
length(d$time)
d
d$pkt_time
length(d$pkt_time)
d_test$pkt_time == d$pkt_time
length(d_test$pkt_time)
length(d$pkt_time)
d_test %>%
left_join(d)
fname
d
d$subid
d$subid[1]
x=d
fname <- paste0("../data/frame_times_redone/",
str_sub(as.character(x$subid[1]),start=4,end=8),
".csv")
fname
fname <- paste("../data/posture/",
x$subid[1],
".csv",
sep="")
fname
postures <- read_csv(fname)
postures
postures <- read_csv(fname)
postures
x$posture <- factor(NA,levels=levels(postures$posture))
x
min
p
p$start
postures <- read_csv(fname)
postures
postures$start
min(postures$start)
assert_that(p$start[1]==min(postures$start))
alldets
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
## main data merge script - prerequisite for all other analyses
rm(list=ls())
library(dplyr)
library(readr)
library(magrittr)
library(tidyr)
library(assertthat)
source("helper.R")
## load detectors for mtcnn
dets <- read_csv("../data/final_output/mtcnn3.csv") %>%
mutate(subid = video) %>%
mutate(frame = as.numeric(frame)) %>%
mutate(faceMT = as.logical(is_face)) %>%
distinct(video,frame,.keep_all=TRUE)
# open pose detections - faces and wrists
detsOpenPose <- read_csv("../data/final_output/openpose_results_truncated_2.csv")
detsOpenPose <- detsOpenPose %>%
mutate(video = name) %>%
distinct(video,frame,.keep_all=TRUE)  %>%
mutate(frame = as.numeric(frame) + 1) %>%
mutate(faceOP = Nose_conf!=0)  %>%
mutate(wristOP = LWrist_conf!=0 | RWrist_conf!=0 )
# # open pose detectors - hands -- not using because poor accuracy
# detsOpenPose_Hands <- read_csv("../data/final_output/openpose_results_with_detail_hands.csv")
# detsOpenPose_HandConf <- detsOpenPose_Hands %>%
#   mutate(video = name) %>%
#   distinct(video,frame,.keep_all=TRUE)  %>%
#   mutate(frame = as.numeric(frame) + 1) %>%
#   select(video,frame,ends_with("conf")) %>%
#   mutate(confLeft=rowSums(.[grep("hand_left", names(.))])/21)  %>%
#   mutate(confRight=rowSums(.[grep("hand_right", names(.))])/21)  %>%
#   mutate(handOP = confRight>0 | confLeft>0 )
# viola jones face detectors
detsViola <- read_csv("../data/final_output/viola.csv")
detsViola <- detsViola %>%
distinct(video,frame,.keep_all=TRUE)  %>%
mutate(faceVJ = as.logical(is_face))  %>%
mutate(frame = as.numeric(frame))
## check sizes
assert_that(dim(dets)[1]==dim(detsViola)[1])
# assert_that(dim(dets)[1]==dim(detsOpenPose)[1]) ## slightly different -- will get to this below.
# merge all three detectors
alldets=left_join(dets,detsViola[,c("video","frame","faceVJ")])
alldets=left_join(alldets,detsOpenPose[,c("video","frame","faceOP","wristOP")])
# load demographics and pose / orientation / timing
demo.data <- read_csv("../data/demographics/demographics.csv") %>%
select(-ra, -assist, -len) ## -dot -dib fields did not exist, deleted bll
# rearrange so we make sure it is in the order of the frames
alldets<-arrange(alldets,video,frame)
## OpenPose doesn't get all frames. Let's check out the frames it doesn't have
missingInd=is.na(alldets$faceOP)
assert_that(sum(is.na(alldets$faceOP))==45)
missingOP<-alldets %>%
filter(missingInd)
# None of the missing frames are faces. Replace OP "NAN" detections with "FALSE"
alldets$faceOP[missingInd]=FALSE
alldets$wristOP[missingInd]=FALSE
# calls helper functions in helper.r to get times and posture coding integrated
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
test <- d %>%
filter(!is.na(dt)) %>%
mutate(isDuplicate = (dt==0)) %>%
group_by(subid) %>%
summarize(duplicateCount = sum(isDuplicate))
## check that we synced everything right
assert_that(sum(test$duplicateCount)==0)
assert_that(sum(is.na(d$time))==0)
# Complete the data frame so that zeros get counted: expands so that each subid
# includes a zero length row for each posture and orientation.
# this was annoying.
ages <- d %>%
group_by(subid) %>%
summarise(age.grp = mean(age.grp))
complete_combos <- tidyr::expand(d, nesting(posture, orientation), subid) %>%
mutate(dt = 0, faceMT = FALSE, faceVJ = FALSE, faceOP = FALSE, handOP = FALSE, wristOP = FALSE) %>%
left_join(ages)
d <- bind_rows(d, complete_combos) ## bind these 251  data points
## save it out
write_csv(d, "../data/consolidateddata/consolidated_data_4detectors_march7.csv")
## main data merge script - prerequisite for all other analyses
rm(list=ls())
library(dplyr)
library(readr)
library(magrittr)
library(tidyr)
library(assertthat)
source("helper.R")
## load detectors for mtcnn
dets <- read_csv("../data/final_output/mtcnn3.csv") %>%
mutate(subid = video) %>%
mutate(frame = as.numeric(frame)) %>%
mutate(faceMT = as.logical(is_face)) %>%
distinct(video,frame,.keep_all=TRUE)
# open pose detections - faces and wrists
detsOpenPose <- read_csv("../data/final_output/openpose_results_truncated_2.csv")
detsOpenPose <- detsOpenPose %>%
mutate(video = name) %>%
distinct(video,frame,.keep_all=TRUE)  %>%
mutate(frame = as.numeric(frame) + 1) %>%
mutate(faceOP = Nose_conf!=0)  %>%
mutate(wristOP = LWrist_conf!=0 | RWrist_conf!=0 )
# # open pose detectors - hands -- not using because poor accuracy
# detsOpenPose_Hands <- read_csv("../data/final_output/openpose_results_with_detail_hands.csv")
# detsOpenPose_HandConf <- detsOpenPose_Hands %>%
#   mutate(video = name) %>%
#   distinct(video,frame,.keep_all=TRUE)  %>%
#   mutate(frame = as.numeric(frame) + 1) %>%
#   select(video,frame,ends_with("conf")) %>%
#   mutate(confLeft=rowSums(.[grep("hand_left", names(.))])/21)  %>%
#   mutate(confRight=rowSums(.[grep("hand_right", names(.))])/21)  %>%
#   mutate(handOP = confRight>0 | confLeft>0 )
# viola jones face detectors
detsViola <- read_csv("../data/final_output/viola.csv")
detsViola <- detsViola %>%
distinct(video,frame,.keep_all=TRUE)  %>%
mutate(faceVJ = as.logical(is_face))  %>%
mutate(frame = as.numeric(frame))
## check sizes
assert_that(dim(dets)[1]==dim(detsViola)[1])
# assert_that(dim(dets)[1]==dim(detsOpenPose)[1]) ## slightly different -- will get to this below.
# merge all three detectors
alldets=left_join(dets,detsViola[,c("video","frame","faceVJ")])
alldets=left_join(alldets,detsOpenPose[,c("video","frame","faceOP","wristOP")])
# load demographics and pose / orientation / timing
demo.data <- read_csv("../data/demographics/demographics.csv") %>%
select(-ra, -assist, -len) ## -dot -dib fields did not exist, deleted bll
# rearrange so we make sure it is in the order of the frames
alldets<-arrange(alldets,video,frame)
## OpenPose doesn't get all frames. Let's check out the frames it doesn't have
missingInd=is.na(alldets$faceOP)
assert_that(sum(is.na(alldets$faceOP))==45)
missingOP<-alldets %>%
filter(missingInd)
# None of the missing frames are faces. Replace OP "NAN" detections with "FALSE"
alldets$faceOP[missingInd]=FALSE
alldets$wristOP[missingInd]=FALSE
# calls helper functions in helper.r to get times and posture coding integrated
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
test <- d %>%
filter(!is.na(dt)) %>%
mutate(isDuplicate = (dt==0)) %>%
group_by(subid) %>%
summarize(duplicateCount = sum(isDuplicate))
## check that we synced everything right
assert_that(sum(test$duplicateCount)==0)
assert_that(sum(is.na(d$time))==0)
# Complete the data frame so that zeros get counted: expands so that each subid
# includes a zero length row for each posture and orientation.
# this was annoying.
ages <- d %>%
group_by(subid) %>%
summarise(age.grp = mean(age.grp))
complete_combos <- tidyr::expand(d, nesting(posture, orientation), subid) %>%
mutate(dt = 0, faceMT = FALSE, faceVJ = FALSE, faceOP = FALSE, handOP = FALSE, wristOP = FALSE) %>%
left_join(ages)
d <- bind_rows(d, complete_combos) ## bind these 251  data points
## save it out
write_csv(d, "../data/consolidateddata/consolidated_data_4detectors_march7.csv")
rm(list=ls())
library(dplyr)
library(readr)
library(magrittr)
library(tidyr)
library(assertthat)
source("helper.R")
## load detectors for mtcnn
dets <- read_csv("../data/final_output/mtcnn3.csv") %>%
mutate(subid = video) %>%
mutate(frame = as.numeric(frame)) %>%
mutate(faceMT = as.logical(is_face)) %>%
distinct(video,frame,.keep_all=TRUE)
# open pose detections - faces and wrists
detsOpenPose <- read_csv("../data/final_output/openpose_results_truncated_2.csv")
detsOpenPose <- detsOpenPose %>%
mutate(video = name) %>%
distinct(video,frame,.keep_all=TRUE)  %>%
mutate(frame = as.numeric(frame) + 1) %>%
mutate(faceOP = Nose_conf!=0)  %>%
mutate(wristOP = LWrist_conf!=0 | RWrist_conf!=0 )
# # open pose detectors - hands -- not using because poor accuracy
# detsOpenPose_Hands <- read_csv("../data/final_output/openpose_results_with_detail_hands.csv")
# detsOpenPose_HandConf <- detsOpenPose_Hands %>%
#   mutate(video = name) %>%
#   distinct(video,frame,.keep_all=TRUE)  %>%
#   mutate(frame = as.numeric(frame) + 1) %>%
#   select(video,frame,ends_with("conf")) %>%
#   mutate(confLeft=rowSums(.[grep("hand_left", names(.))])/21)  %>%
#   mutate(confRight=rowSums(.[grep("hand_right", names(.))])/21)  %>%
#   mutate(handOP = confRight>0 | confLeft>0 )
# viola jones face detectors
detsViola <- read_csv("../data/final_output/viola.csv")
detsViola <- detsViola %>%
distinct(video,frame,.keep_all=TRUE)  %>%
mutate(faceVJ = as.logical(is_face))  %>%
mutate(frame = as.numeric(frame))
## check sizes
assert_that(dim(dets)[1]==dim(detsViola)[1])
# assert_that(dim(dets)[1]==dim(detsOpenPose)[1]) ## slightly different -- will get to this below.
# merge all three detectors
alldets=left_join(dets,detsViola[,c("video","frame","faceVJ")])
alldets=left_join(alldets,detsOpenPose[,c("video","frame","faceOP","wristOP")])
# load demographics and pose / orientation / timing
demo.data <- read_csv("../data/demographics/demographics.csv") %>%
select(-ra, -assist, -len) ## -dot -dib fields did not exist, deleted bll
# rearrange so we make sure it is in the order of the frames
alldets<-arrange(alldets,video,frame)
## OpenPose doesn't get all frames. Let's check out the frames it doesn't have
missingInd=is.na(alldets$faceOP)
assert_that(sum(is.na(alldets$faceOP))==45)
missingOP<-alldets %>%
filter(missingInd)
# None of the missing frames are faces. Replace OP "NAN" detections with "FALSE"
alldets$faceOP[missingInd]=FALSE
alldets$wristOP[missingInd]=FALSE
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
begin
begin
ls
p
min(p$start)
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
debugSource('~/Documents/GitHub/xs-face/writeup-cogsci/helper.R', echo=TRUE)
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
begin
min(p$start)
assert_that(begin==min(p$start))
assert_that(begin==min(p$start))
debugSource('~/Documents/GitHub/xs-face/writeup-cogsci/helper.R', echo=TRUE)
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
print(paste0("**** zero-time", begin, "*** min time:", min(p$start)))
print(paste0("**** zero-time", begin, "*** min time:", min(p$start)))
print(paste0("**** zero-time", begin, "*** min time:", min(p$start)))
print(paste0("**** zero-time", begin, "*** min time:", min(p$start)))
debugSource('~/Documents/GitHub/xs-face/writeup-cogsci/helper.R', echo=TRUE)
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
debugSource('~/Documents/GitHub/xs-face/writeup-cogsci/helper.R', echo=TRUE)
debugSource('~/Documents/GitHub/xs-face/writeup-cogsci/helper.R', echo=TRUE)
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
begin
p
p$start
fname <- paste("../data/posture/",
x$subid[1],
".csv",
sep="")
fname
fname = "../data/posture/XS_1216.csv"
fname
postures <- read_csv(fname)
postures
postures$start
postures <- regularize.postures(subset(postures,code=="posture"))
x$posture <- factor(NA,levels=levels(postures$posture))
postures
postures$start
postures
sort(postures,start)
postures[order(start),]
postures
postures <- read_csv(fname)
postures[order(start),]
order(start)
order(postures$start)
postures <- postures[order(postures$start),]
postures
warnings()
source('~/Documents/GitHub/xs-face/writeup-cogsci/helper.R', echo=TRUE)
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
fname
postures <- read_csv(fname)
postures
postures$type
postures$start
postures <- postures[order(postures$start),]
postures
source('~/Documents/GitHub/xs-face/writeup-cogsci/helper.R', echo=TRUE)
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
warnings()
x
alldets
d
source('~/Documents/GitHub/xs-face/writeup-cogsci/helper.R', echo=TRUE)
## main data merge script - prerequisite for all other analyses
rm(list=ls())
library(dplyr)
library(readr)
library(magrittr)
library(tidyr)
library(assertthat)
source("helper.R")
## load detectors for mtcnn
dets <- read_csv("../data/final_output/mtcnn3.csv") %>%
mutate(subid = video) %>%
mutate(frame = as.numeric(frame)) %>%
mutate(faceMT = as.logical(is_face)) %>%
distinct(video,frame,.keep_all=TRUE)
# open pose detections - faces and wrists
detsOpenPose <- read_csv("../data/final_output/openpose_results_truncated_2.csv")
detsOpenPose <- detsOpenPose %>%
mutate(video = name) %>%
distinct(video,frame,.keep_all=TRUE)  %>%
mutate(frame = as.numeric(frame) + 1) %>%
mutate(faceOP = Nose_conf!=0)  %>%
mutate(wristOP = LWrist_conf!=0 | RWrist_conf!=0 )
# # open pose detectors - hands -- not using because poor accuracy
# detsOpenPose_Hands <- read_csv("../data/final_output/openpose_results_with_detail_hands.csv")
# detsOpenPose_HandConf <- detsOpenPose_Hands %>%
#   mutate(video = name) %>%
#   distinct(video,frame,.keep_all=TRUE)  %>%
#   mutate(frame = as.numeric(frame) + 1) %>%
#   select(video,frame,ends_with("conf")) %>%
#   mutate(confLeft=rowSums(.[grep("hand_left", names(.))])/21)  %>%
#   mutate(confRight=rowSums(.[grep("hand_right", names(.))])/21)  %>%
#   mutate(handOP = confRight>0 | confLeft>0 )
# viola jones face detectors
detsViola <- read_csv("../data/final_output/viola.csv")
detsViola <- detsViola %>%
distinct(video,frame,.keep_all=TRUE)  %>%
mutate(faceVJ = as.logical(is_face))  %>%
mutate(frame = as.numeric(frame))
## check sizes
assert_that(dim(dets)[1]==dim(detsViola)[1])
# assert_that(dim(dets)[1]==dim(detsOpenPose)[1]) ## slightly different -- will get to this below.
# merge all three detectors
alldets=left_join(dets,detsViola[,c("video","frame","faceVJ")])
alldets=left_join(alldets,detsOpenPose[,c("video","frame","faceOP","wristOP")])
# load demographics and pose / orientation / timing
demo.data <- read_csv("../data/demographics/demographics.csv") %>%
select(-ra, -assist, -len) ## -dot -dib fields did not exist, deleted bll
# rearrange so we make sure it is in the order of the frames
alldets<-arrange(alldets,video,frame)
## OpenPose doesn't get all frames. Let's check out the frames it doesn't have
missingInd=is.na(alldets$faceOP)
assert_that(sum(is.na(alldets$faceOP))==45)
missingOP<-alldets %>%
filter(missingInd)
# None of the missing frames are faces. Replace OP "NAN" detections with "FALSE"
alldets$faceOP[missingInd]=FALSE
alldets$wristOP[missingInd]=FALSE
# calls helper functions in helper.r to get times and posture coding integrated
d <- alldets %>%
distinct(video,frame,.keep_all=TRUE)  %>%
select(-c(is_face,video)) %>% # redudant with faceMT & subid, dropping
left_join(demo.data) %>%
group_by(subid) %>%
do(add.times(.)) %>%
group_by(subid) %>%
do(add.posture(.)) ## adds both postures and orientatinos
test <- d %>%
filter(!is.na(dt)) %>%
mutate(isDuplicate = (dt==0)) %>%
group_by(subid) %>%
summarize(duplicateCount = sum(isDuplicate))
## check that we synced everything right
assert_that(sum(test$duplicateCount)==0)
assert_that(sum(is.na(d$time))==0)
# Complete the data frame so that zeros get counted: expands so that each subid
# includes a zero length row for each posture and orientation.
# this was annoying.
ages <- d %>%
group_by(subid) %>%
summarise(age.grp = mean(age.grp))
complete_combos <- tidyr::expand(d, nesting(posture, orientation), subid) %>%
mutate(dt = 0, faceMT = FALSE, faceVJ = FALSE, faceOP = FALSE, handOP = FALSE, wristOP = FALSE) %>%
left_join(ages)
d <- bind_rows(d, complete_combos) ## bind these 251  data points
## save it out
write_csv(d, "../data/consolidateddata/consolidated_data_4detectors_test.csv")
d
d$best_time
source('~/Documents/GitHub/xs-face/writeup-cogsci/helper.R', echo=TRUE)
source('~/Documents/GitHub/xs-face/writeup-cogsci/merge_all_data.R', echo=TRUE)
warnings()
